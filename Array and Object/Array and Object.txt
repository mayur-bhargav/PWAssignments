Question 1 ) 1. In the following shopping cart add, re9ove, and edit ite9s
=y const shoppingCart = ['Milk', 'Coffee', 'Tea', 'honey']
 add 'Meat' in the beginning of your shopping cart if it has not been already added
 add Sugar at the end of you shopping cart if it has not been already added
 remove 'Honey' if you are allergic to hone=
modify Tea to 'Green Tea'

Solution 1 )

const shoppingCart = ['Milk', 'Coffee', 'Tea', 'Honey'];
if (!shoppingCart.includes('Meat')) {
    shoppingCart.unshift('Meat');
}
if (!shoppingCart.includes('Sugar')) {
    shoppingCart.push('Sugar');
}
const honeyIndex = shoppingCart.indexOf('Honey');
if (honeyIndex !== -1) {
    shoppingCart.splice(honeyIndex, 1);
}
const teaIndex = shoppingCart.indexOf('Tea');
if (teaIndex !== -1) {
    shoppingCart[teaIndex] = 'Green Tea';
}
console.log(shoppingCart);

Question 2) 2. The following is an array of 10 students ages:
=y const ages = [19, 22, 19, 24, 20, 25, 26, 24, 25, 24]
8 Sort the array and find the min and maa age`
8 Find the median age(one middle item or two middle items divided by two)
8 Find the average age(all items divided by number of items)
8 Find the range of the ages(maa minus min)
8 Compare the value of (min - average) and (maa - average), use abs() method


Solution 2)

const ages = [19, 22, 19, 24, 20, 25, 21, 24, 25, 24];
ages.sort((a, b) =y a - b);
const minAge = ages[0];
const maxAge = ages[ages.length - 1];
let medianAge;
if (ages.length % 2 === 0) {
    medianAge = (ages[ages.length / 2 - 1] + ages[ages.length / 2]) / 2;
} else {
    medianAge = ages[Math.floor(ages.length / 2)];
}
const averageAge = ages.reduce((acc, curr) =y acc + curr, 0) / ages.length;
const ageRange = maxAge - minAge;
const minAverageDiff = Math.abs(minAge - averageAge);
const maxAverageDiff = Math.abs(maxAge - averageAge);

console.log(`Min Age: ${minAge}, Max Age: ${maxAge}`);
console.log(`Median Age: ${medianAge}`);
console.log(`Average Age: ${averageAge}`);
console.log(`Age Range: ${ageRange}`);
console.log(`Difference between Min Age and Average Age: ${minAverageDiff}`);
console.log(`Difference between Max Age and Average Age: ${maxAverageDiff}`);

Question 3) Object Extensibility and Sealing
a) Use the Object.preventEatensions method to prevent any further additions of properties to the student object.
b) Use the Object.isEatensible method to check if the student object is eatensible. Store the result in a variable
called eatensibleStatus.
c) Create a new object called teacher with a 'subject' property set to 'Math'.
d) Use the Object.seal method to seal the teacher object, preventing any additions or deletions of properties.
e) Use the Object.isSealed method to check if the teacher object is sealed. Store the result in a variable called
sealedStatus.
f) Print the eatensible Status and sealedStatus to the console.

Solution 3)

const student = {
    name: 'John Doe',
    age: 20
};
Object.preventExtensions(student);
const extensibleStatus = Object.isExtensible(student);
const teacher = {
    subject: 'Math'
};
Object.seal(teacher);
const sealedStatus = Object.isSealed(teacher);
console.log(`Student Extensible: ${extensibleStatus}`); // Should log false
console.log(`Teacher Sealed: ${sealedStatus}`); // Should log true


Question 4) Implement the following functions using pure JavaScript (without any external libraries or frameworks):
a. Add a Student: Create a function to add a new student to the array.
b. Update Student Information: Create a function to update a student's information based on their id.
c. Delete a Student: Create a function to delete a student based on their id.
d. List All Students: Create a function to display a list of all students.
e. Find Students by Grade: Create a function to find all students who have a specific grade.
f. Calculate Average Age: Create a function to calculate the average age of all students using array method.

Solution 4) 

let students = [
    { id: 1, firstName: 'John', lastName: 'Doe', age: 20, grade: 'A' },
    { id: 2, firstName: 'Jane', lastName: 'Smith', age: 22, grade: 'B' },
    { id: 3, firstName: 'Bob', lastName: 'Johnson', age: 19, grade: 'A' }
];
function addStudent(student) {
    students.push(student);
}
function updateStudent(id, updatedStudent) {
    const index = students.findIndex(student => student.id === id);
    if (index !== -1) {
        students[index] = { ...students[index], ...updatedStudent };
    }
}
function deleteStudent(id) {
    students = students.filter(student => student.id !== id);
}
function listAllStudents() {
    console.log('Listing All Students:');
    students.forEach(student => {
        console.log(`ID: ${student.id}, Name: ${student.firstName} ${student.lastName}, Age: ${student.age}, Grade: ${student.grade}`);
    });
}
function findStudentsByGrade(grade) {
    return students.filter(student => student.grade === grade);
}
function calculateAverageAge() {
    const totalAge = students.reduce((sum, student) => sum + student.age, 0);
    return totalAge / students.length;
}
addStudent({ id: 4, firstName: 'Brian', lastName: 'Wilson', age: 23, grade: 'B' });
updateStudent(4, { grade: 'A' });
deleteStudent(1);
listAllStudents();

const studentsGradeA = findStudentsByGrade('A');
console.log('Students with Grade A:', studentsGradeA);

const averageAge = calculateAverageAge();
console.log('Average Age of Students:', averageAge);


Question 5) You are given a JavaScript object representing a student's information. Your task is to use the 'for...in' loop
to iterate over the properties of the object and perform various operations.

Answer 5) 

function displayStudentInfo(student) {
    for (let property in student) {
        if (student.hasOwnProperty(property)) {
            console.log(`Property: ${property}, Value: ${student[property]}`);
        }
    }
}
const student = {
    name: "Alice",
    age: 22,
    major: "Computer Science",
    GPA: 3.8,
    isEnrolled: true
};
displayStudentInfo(student);